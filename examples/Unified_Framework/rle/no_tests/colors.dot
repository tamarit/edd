digraph PDG {
15 [shape=ellipse, label="15 .- rle:doEncode(\"WWBWWWWWBBBWWWWWWWBWWWWW\", \"W\", 3, []) = \"4W1B3W2B4W1B3W\""];
25 [shape=ellipse, label="25 .- rle:doDecode(\"7W1B5W\", [], \"WWWWWWWBWWWWWBBB\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
13 [shape=ellipse, label="13 .- rle:doEncode(\"WWWWWBBBWWWWWWWBWWWWW\", \"B\", 1, \"4W\") = \"4W1B3W2B4W1B3W\""];
8 [shape=ellipse, label="8 .- rle:doEncode(\"WWWWWWWBWWWWW\", \"B\", 2, \"4W1B3W\") = \"4W1B3W2B4W1B3W\""];
45 [shape=ellipse, label="45 .- rle:doEncode(\"WWBBBWWWWWWWBWWWWW\", \"W\", 2, \"4W1B\") = \"4W1B3W2B4W1B3W\""];
60 [shape=ellipse, label="60 .- rle:doDecode(\"B4W1B3W\", \"2\", \"WWWWBWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
57 [shape=ellipse, label="57 .- rle:doDecode(\"1B3W\", [], \"WWWWBWWWBBWWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
54 [shape=ellipse, label="54 .- rle:doDecode(\"W\", \"3\", \"WWWWBWWWBBWWWWB\") = \"WWWWBWWWBBWWWWBWWW\""];
21 [shape=ellipse, label="21 .- rle:doDecode(\"5W\", [], \"WWWWWWWBWWWWWBBBWWWWWWWB\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
47 [shape=ellipse, label="47 .- rle:doEncode(\"WWWWWBBBWWWWWWWBWWWWW\", \"B\", 1, \"4W\") = \"4W1B3W2B4W1B3W\""];
24 [shape=ellipse, label="24 .- rle:doDecode(\"W1B5W\", \"7\", \"WWWWWWWBWWWWWBBB\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
40 [shape=ellipse, label="40 .- rle:doEncode(\"WWWWBWWWWW\", \"W\", 2, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
58 [shape=ellipse, label="58 .- rle:doDecode(\"W1B3W\", \"4\", \"WWWWBWWWBB\") = \"WWWWBWWWBBWWWWBWWW\""];
11 [shape=ellipse, label="11 .- rle:doEncode(\"WWBBBWWWWWWWBWWWWW\", \"W\", 2, \"4W1B\") = \"4W1B3W2B4W1B3W\""];
63 [shape=ellipse, label="63 .- rle:doDecode(\"3W2B4W1B3W\", [], \"WWWWB\") = \"WWWWBWWWBBWWWWBWWW\""];
26 [shape=ellipse, label="26 .- rle:doDecode(\"B7W1B5W\", \"3\", \"WWWWWWWBWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
20 [shape=ellipse, label="20 .- rle:doDecode(\"W\", \"5\", \"WWWWWWWBWWWWWBBBWWWWWWWB\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
44 [shape=ellipse, label="44 .- rle:doEncode(\"BBBWWWWWWWBWWWWW\", \"W\", 3, \"4W1B\") = \"4W1B3W2B4W1B3W\""];
1 [shape=ellipse, label="1 .- rle:doEncode(\"WW\", \"W\", 2, \"4W1B3W2B4W1B\") = \"4W1B3W2B4W1B3W\""];
41 [shape=ellipse, label="41 .- rle:doEncode(\"WWWWWWBWWWWW\", \"W\", 1, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
43 [shape=ellipse, label="43 .- rle:doEncode(\"BBWWWWWWWBWWWWW\", \"B\", 1, \"4W1B3W\") = \"4W1B3W2B4W1B3W\""];
56 [shape=ellipse, label="56 .- rle:doDecode(\"B3W\", \"1\", \"WWWWBWWWBBWWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
14 [shape=ellipse, label="14 .- rle:doEncode(\"BWWWWWBBBWWWWWWWBWWWWW\", \"W\", 4, []) = \"4W1B3W2B4W1B3W\""];
61 [shape=ellipse, label="61 .- rle:doDecode(\"2B4W1B3W\", [], \"WWWWBWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
28 [shape=ellipse, label="28 .- rle:doDecode(\"W3B7W1B5W\", \"5\", \"WWWWWWWB\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
23 [shape=ellipse, label="23 .- rle:doDecode(\"1B5W\", [], \"WWWWWWWBWWWWWBBBWWWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
16 [shape=ellipse, label="16 .- rle:doEncode(\"WWWWBWWWWWBBBWWWWWWWBWWWWW\", \"W\", 2, []) = \"4W1B3W2B4W1B3W\""];
12 [shape=ellipse, label="12 .- rle:doEncode(\"WWWWBBBWWWWWWWBWWWWW\", \"W\", 1, \"4W1B\") = \"4W1B3W2B4W1B3W\""];
39 [shape=ellipse, label="39 .- rle:doEncode(\"WWBWWWWW\", \"W\", 3, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
34 [shape=ellipse, label="34 .- rle:doEncode([], \"W\", 3, \"4W1B3W2B4W1B\") = \"4W1B3W2B4W1B3W\""];
68 [shape=ellipse, label="68 .- rle:test() = false"];
52 [shape=ellipse, label="52 .- rle:encode(\"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\") = \"4W1B3W2B4W1B3W\""];
64 [shape=ellipse, label="64 .- rle:doDecode(\"B3W2B4W1B3W\", \"1\", \"WWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
50 [shape=ellipse, label="50 .- rle:doEncode(\"WWWWBWWWWWBBBWWWWWWWBWWWWW\", \"W\", 2, []) = \"4W1B3W2B4W1B3W\""];
67 [shape=ellipse, label="67 .- rle:decode(\"4W1B3W2B4W1B3W\") = \"WWWWBWWWBBWWWWBWWW\""];
36 [shape=ellipse, label="36 .- rle:doEncode(\"WWWW\", \"W\", 1, \"4W1B3W2B4W1B\") = \"4W1B3W2B4W1B3W\""];
7 [shape=ellipse, label="7 .- rle:doEncode(\"WWWWWWBWWWWW\", \"W\", 1, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
32 [shape=ellipse, label="32 .- rle:doDecode(\"W1B5W3B7W1B5W\", \"7\", []) = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
35 [shape=ellipse, label="35 .- rle:doEncode(\"WW\", \"W\", 2, \"4W1B3W2B4W1B\") = \"4W1B3W2B4W1B3W\""];
3 [shape=ellipse, label="3 .- rle:doEncode(\"WWWWW\", \"B\", 1, \"4W1B3W2B4W\") = \"4W1B3W2B4W1B3W\""];
55 [shape=ellipse, label="55 .- rle:doDecode(\"3W\", [], \"WWWWBWWWBBWWWWB\") = \"WWWWBWWWBBWWWWBWWW\""];
49 [shape=ellipse, label="49 .- rle:doEncode(\"WWBWWWWWBBBWWWWWWWBWWWWW\", \"W\", 3, []) = \"4W1B3W2B4W1B3W\""];
33 [shape=ellipse, label="33 .- rle:decode(\"7W1B5W3B7W1B5W\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
42 [shape=ellipse, label="42 .- rle:doEncode(\"WWWWWWWBWWWWW\", \"B\", 2, \"4W1B3W\") = \"4W1B3W2B4W1B3W\""];
10 [shape=ellipse, label="10 .- rle:doEncode(\"BBBWWWWWWWBWWWWW\", \"W\", 3, \"4W1B\") = \"4W1B3W2B4W1B3W\""];
9 [shape=ellipse, label="9 .- rle:doEncode(\"BBWWWWWWWBWWWWW\", \"B\", 1, \"4W1B3W\") = \"4W1B3W2B4W1B3W\""];
19 [shape=ellipse, label="19 .- rle:doDecode([], [], \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
51 [shape=ellipse, label="51 .- rle:doEncode(\"WWWWWWBWWWWWBBBWWWWWWWBWWWWW\", \"W\", 1, []) = \"4W1B3W2B4W1B3W\""];
18 [shape=ellipse, label="18 .- rle:encode(\"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\") = \"4W1B3W2B4W1B3W\""];
29 [shape=ellipse, label="29 .- rle:doDecode(\"5W3B7W1B5W\", [], \"WWWWWWWB\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
22 [shape=ellipse, label="22 .- rle:doDecode(\"B5W\", \"1\", \"WWWWWWWBWWWWWBBBWWWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
27 [shape=ellipse, label="27 .- rle:doDecode(\"3B7W1B5W\", [], \"WWWWWWWBWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
46 [shape=ellipse, label="46 .- rle:doEncode(\"WWWWBBBWWWWWWWBWWWWW\", \"W\", 1, \"4W1B\") = \"4W1B3W2B4W1B3W\""];
38 [shape=ellipse, label="38 .- rle:doEncode(\"BWWWWW\", \"W\", 4, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
4 [shape=ellipse, label="4 .- rle:doEncode(\"BWWWWW\", \"W\", 4, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
48 [shape=ellipse, label="48 .- rle:doEncode(\"BWWWWWBBBWWWWWWWBWWWWW\", \"W\", 4, []) = \"4W1B3W2B4W1B3W\""];
62 [shape=ellipse, label="62 .- rle:doDecode(\"W2B4W1B3W\", \"3\", \"WWWWB\") = \"WWWWBWWWBBWWWWBWWW\""];
17 [shape=ellipse, label="17 .- rle:doEncode(\"WWWWWWBWWWWWBBBWWWWWWWBWWWWW\", \"W\", 1, []) = \"4W1B3W2B4W1B3W\""];
65 [shape=ellipse, label="65 .- rle:doDecode(\"1B3W2B4W1B3W\", [], \"WWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
0 [shape=ellipse, label="0 .- rle:doEncode([], \"W\", 3, \"4W1B3W2B4W1B\") = \"4W1B3W2B4W1B3W\""];
66 [shape=ellipse, label="66 .- rle:doDecode(\"W1B3W2B4W1B3W\", \"4\", []) = \"WWWWBWWWBBWWWWBWWW\""];
37 [shape=ellipse, label="37 .- rle:doEncode(\"WWWWW\", \"B\", 1, \"4W1B3W2B4W\") = \"4W1B3W2B4W1B3W\""];
6 [shape=ellipse, label="6 .- rle:doEncode(\"WWWWBWWWWW\", \"W\", 2, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
2 [shape=ellipse, label="2 .- rle:doEncode(\"WWWW\", \"W\", 1, \"4W1B3W2B4W1B\") = \"4W1B3W2B4W1B3W\""];
5 [shape=ellipse, label="5 .- rle:doEncode(\"WWBWWWWW\", \"W\", 3, \"4W1B3W2B\") = \"4W1B3W2B4W1B3W\""];
31 [shape=ellipse, label="31 .- rle:doDecode(\"1B5W3B7W1B5W\", [], \"WWWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
30 [shape=ellipse, label="30 .- rle:doDecode(\"B5W3B7W1B5W\", \"1\", \"WWWWWWW\") = \"WWWWWWWBWWWWWBBBWWWWWWWBWWWWW\""];
59 [shape=ellipse, label="59 .- rle:doDecode(\"4W1B3W\", [], \"WWWWBWWWBB\") = \"WWWWBWWWBBWWWWBWWW\""];
53 [shape=ellipse, label="53 .- rle:doDecode([], [], \"WWWWBWWWBBWWWWBWWW\") = \"WWWWBWWWBBWWWWBWWW\""];
15 -> 14 [color=black, penwidth=3];
25 -> 24 [color=black, penwidth=3];
13 -> 12 [color=black, penwidth=3];
8 -> 7 [color=black, penwidth=3];
45 -> 44 [color=black, penwidth=3];
60 -> 59 [color=black, penwidth=3];
57 -> 56 [color=black, penwidth=3];
54 -> 53 [color=black, penwidth=3];
21 -> 20 [color=black, penwidth=3];
47 -> 46 [color=black, penwidth=3];
24 -> 23 [color=black, penwidth=3];
40 -> 39 [color=black, penwidth=3];
58 -> 57 [color=black, penwidth=3];
11 -> 10 [color=black, penwidth=3];
63 -> 62 [color=black, penwidth=3];
26 -> 25 [color=black, penwidth=3];
20 -> 19 [color=black, penwidth=3];
44 -> 43 [color=black, penwidth=3];
1 -> 0 [color=black, penwidth=3];
41 -> 40 [color=black, penwidth=3];
43 -> 42 [color=black, penwidth=3];
56 -> 55 [color=black, penwidth=3];
14 -> 13 [color=black, penwidth=3];
61 -> 60 [color=black, penwidth=3];
28 -> 27 [color=black, penwidth=3];
23 -> 22 [color=black, penwidth=3];
16 -> 15 [color=black, penwidth=3];
12 -> 11 [color=black, penwidth=3];
39 -> 38 [color=black, penwidth=3];
68 -> 67 [color=black, penwidth=3];
68 -> 52 [color=black, penwidth=3];
68 -> 33 [color=black, penwidth=3];
68 -> 18 [color=black, penwidth=3];
52 -> 51 [color=black, penwidth=3];
64 -> 63 [color=black, penwidth=3];
50 -> 49 [color=black, penwidth=3];
67 -> 66 [color=black, penwidth=3];
36 -> 35 [color=black, penwidth=3];
7 -> 6 [color=black, penwidth=3];
32 -> 31 [color=black, penwidth=3];
35 -> 34 [color=black, penwidth=3];
3 -> 2 [color=black, penwidth=3];
55 -> 54 [color=black, penwidth=3];
49 -> 48 [color=black, penwidth=3];
33 -> 32 [color=black, penwidth=3];
42 -> 41 [color=black, penwidth=3];
10 -> 9 [color=black, penwidth=3];
9 -> 8 [color=black, penwidth=3];
51 -> 50 [color=black, penwidth=3];
18 -> 17 [color=black, penwidth=3];
29 -> 28 [color=black, penwidth=3];
22 -> 21 [color=black, penwidth=3];
27 -> 26 [color=black, penwidth=3];
46 -> 45 [color=black, penwidth=3];
38 -> 37 [color=black, penwidth=3];
4 -> 3 [color=black, penwidth=3];
48 -> 47 [color=black, penwidth=3];
62 -> 61 [color=black, penwidth=3];
17 -> 16 [color=black, penwidth=3];
65 -> 64 [color=black, penwidth=3];
66 -> 65 [color=black, penwidth=3];
37 -> 36 [color=black, penwidth=3];
6 -> 5 [color=black, penwidth=3];
2 -> 1 [color=black, penwidth=3];
5 -> 4 [color=black, penwidth=3];
31 -> 30 [color=black, penwidth=3];
30 -> 29 [color=black, penwidth=3];
59 -> 58 [color=black, penwidth=3];
}